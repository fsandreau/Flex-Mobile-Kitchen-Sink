<?xml version="1.0" encoding="utf-8"?>
<common:RootNavigatorView xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" xmlns:common="views.common.*"
				xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="initDatabase()">
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLResult;
			import flash.data.SQLStatement;
			import flash.events.SQLErrorEvent;
			import flash.events.SQLEvent;
			import flash.filesystem.File;
			
			import mx.collections.ArrayCollection;
			
			import valueObjects.Employee;
			
			private var employeeDB:SQLConnection;
			private var dbStatement:SQLStatement;
			
			[Bindable]private var employeeCollection:Array = new Array();
			
			private function initDatabase():void
			{
				var dbFile:File = File.applicationStorageDirectory.resolvePath("employees.db");
				dbStatement = new SQLStatement();
				dbStatement.itemClass = Employee;
				employeeDB = new SQLConnection();
				dbStatement.sqlConnection = employeeDB;
				employeeDB.addEventListener(SQLEvent.OPEN, onDatabaseOpen);
				employeeDB.addEventListener(SQLErrorEvent.ERROR, errorHandler);
				employeeDB.open(dbFile);
			}
			
			private function onDatabaseOpen(event:SQLEvent):void
			{
				dbStatement.text = "CREATE TABLE IF NOT EXISTS employees ( id INTEGER PRIMARY KEY AUTOINCREMENT, firstname TEXT, lastname TEXT, position TEXT )";
				dbStatement.addEventListener(SQLEvent.RESULT, handleResult);
				dbStatement.addEventListener(SQLErrorEvent.ERROR, createError);
				dbStatement.execute();
				// refresh employee list on open
				getEmployees();
			}
			private function handleResult(event:SQLEvent):void
			{
				var result:SQLResult = dbStatement.getResult();
				if (result != null) {  
					this.employeeCollection = result.data;
				}
			}
			
			private function getEmployees():void
			{
				dbStatement.text = "SELECT * from employees";
				dbStatement.execute();
			}
			
			private function onAddBtnClick(event:MouseEvent):void
			{
				var employee:Employee = new Employee();
				employee.firstname = txtFirstName.text;
				employee.lastname = txtLastName.text;
				employee.position = txtPosition.text;
				addEmployee(employee);
				getEmployees();
			}
			
			private function addEmployee(employee:Employee):void
			{
				dbStatement.text = "INSERT into employees(firstname,lastname,position) values('" +
					employee.firstname +
					"','" +
					employee.lastname  +
					"','" +
					employee.position +
					"')";
				dbStatement.execute();
			}
			
			private function onDeleteBtnClick(event:MouseEvent):void
			{
				var employee:Employee = emplDataGrid.selectedItem as Employee;
				var sqlDelete:String = "delete from employees where id='"+employee.id + "' and firstname='"+ employee.firstname+"' and lastname='"+ 
					employee.lastname+"' and position='"+employee.position+"';";
				dbStatement.text = sqlDelete;
				dbStatement.execute();
				getEmployees();
			}
			
			
			private function errorHandler(error:SQLError):void
			{
				trace("Error Occurred with id: " + error.errorID  + " operation " + error.operation + " message " + error.message);
			}
			private function createError(event:SQLErrorEvent):void
			{
				trace("Error Occurred with id: " + event.error.errorID  + " message " + event.error.message);
			}
			
			
		]]>
	</fx:Script>
	<common:layout>
		<s:VerticalLayout />
	</common:layout>	
	<s:VGroup left="10" right="10" top="5" width="100%">
		
		<s:DataGrid id="emplDataGrid" dataProvider="{new ArrayCollection(employeeCollection)}" width="100%">
			<s:columns>
				<s:ArrayList>
					<s:GridColumn dataField="id">
					</s:GridColumn>
					<s:GridColumn dataField="firstname" />
					<s:GridColumn dataField="lastname" />
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
		<s:Button id="deleteBtn" left="10" label="Delete Employee" click="onDeleteBtnClick(event)" enabled="{emplDataGrid.selectedIndex > -1}"/>
	</s:VGroup>
	
	<s:Form top="110" left="180">
		<s:FormItem label="First Name:">
			<s:TextInput id="txtFirstName"/>
		</s:FormItem>
		<s:FormItem label="Last Name:">
			<s:TextInput id="txtLastName"/>
		</s:FormItem>
		<s:FormItem label="Position:">
			<s:TextInput id="txtPosition" />
		</s:FormItem>
		<s:FormItem>
			<s:Button id="addBtn" label="Add Employee" click="onAddBtnClick(event)"/>
		</s:FormItem>
	</s:Form>    
</common:RootNavigatorView>
