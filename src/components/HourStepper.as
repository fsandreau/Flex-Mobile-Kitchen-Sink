package  {	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;		public class HourStepper extends Sprite 	{		private var _min:Number = 0;		private var _max:Number = 0;		private var _current:Number = 0;				public function HourStepper( min:Number = 0, max:Number = 23, current:Number = 0 ) 		{			super();			_min = min;			_max = max;			_current = current;			addEventListener( Event.ADDED_TO_STAGE, doAdded );		}				public static function formatHour( value:Number ):Number		{			var hrs:Number = value % 12;						if( hrs == 0 )			{				hrs = 12;			}						return hrs		}				protected function doAdded( event:Event ):void		{			up.useHandCursor = false;			up.addEventListener( MouseEvent.CLICK, doUpClick );						down.useHandCursor = false;			down.addEventListener( MouseEvent.CLICK, doDownClick );						field.text = HourStepper.formatHour( _current ).toString();		}				protected function doDownClick( event:MouseEvent ):void		{			if( _min == _max )			{				_current = _current - 1;			} else {				if( _current == _min )				{					_current = _max;				} else {					_current = _current - 1;				}			}						field.text = HourStepper.formatHour( _current ).toString();						dispatchEvent( new StepperEvent( StepperEvent.CHANGE ) );					}				protected function doUpClick( event:MouseEvent ):void		{			if( _min == _max )			{				_current = _current + 1;			} else {				if( _current == _max )				{					_current = _min;				} else {					_current = _current + 1;				}			}						field.text = HourStepper.formatHour( _current ).toString();						dispatchEvent( new StepperEvent( StepperEvent.CHANGE ) );					}						public function get current():Number		{			return _current;		}				public function set current( value:Number ):void		{			_current = value;						field.text = HourStepper.formatHour( value ).toString();		}		public function get maximum():Number		{			return _max;		}				public function set maximum( value:Number ):void		{			_max = value;		}				public function get minimum():Number		{			return _min;		}				public function set minimum( value:Number ):void		{			_min = value;		}						public function get value():Number		{			var hrs:Number = 0;						hrs = _current % 12;			hrs = hrs == 0 ? 12 : hrs;						return hrs;		}				public function set value( value:Number ):void		{			_current = value;						field.text = HourStepper.formatHour( value ).toString();		}			}}